@book{r2,
  title={Software testing},
  author={Singh, Sanjay Kumar and Singh, Amarjeet},
  year={2012},
  publisher={Vandana Publications}
}
@INPROCEEDINGS{r1,
  author={Luengruengroj, Peerawut and Suwannasart, Taratip},
  booktitle={2018 5th International Conference on Computational Science/ Intelligence and Applied Informatics (CSII)}, 
  title={Stubs and Drivers Generator for Object-Oriented Program Testing Using Sequence and Class Diagrams}, 
  year={2018},
  volume={},
  number={},
  pages={32-36},
  doi={10.1109/CSII.2018.00013}}
@inproceedings{newnig,
author = {Luengruengroj, Peerawut and Suwannasart, Taratip},
title = {Stubs and Drivers Generator for Class Integration Testing Using Sequence and Class Diagrams},
year = {2020},
isbn = {9781450376495},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3374549.3374572},
doi = {10.1145/3374549.3374572},
abstract = {This paper aims to present an upgraded "Stubs and Drivers Generating Tool" from our previous research [1] which proposed a web-application for generating stubs and drivers for unit testing. However, the tool has limitations in generating stubs and drivers from a class diagram with abstraction and it allows a tester to select only one class under test for generating them while generated drivers do not include test input values. This enhanced tool generates stubs and drivers with test input values using UML sequence and class diagrams. A tester can perform class integration testing automation with the tool by importing both sequence and class diagrams in XML format. Then, extracting and analyzing elements to produce a call graph. The tester can select a group of classes under test. After that, the tool generates a set of stub and driver files for class integration testing. The tool also randomly generates test input values and expected result for drivers. Finally, the tester can customize the source code generated from the tool and export these files for using in class integration testing process.},
booktitle = {Proceedings of the 2019 3rd International Conference on Software and E-Business},
pages = {115â€“119},
numpages = {5},
keywords = {Class Integration Testing, Object-Oriented, Driver, Software Testing, Test Case, Sequence Diagram, Stub},
location = {Tokyo, Japan},
series = {ICSEB '19}
}
@online{diggaD,
  author = {GeeksforGeeks},
  title = {Difference between Stubs and Drivers},
  year = 2022,
  url = {https://www.geeksforgeeks.org/difference-between-stubs-and-drivers/},
  urldate = {2023-08-20}
}
